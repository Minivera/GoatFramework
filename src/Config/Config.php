<?php

namespace Config;

/**
 * Static class containing all configuration for the application. Most constants 
 * allow an override in the session.
 */
class Config
{
    const CONFIG_FILENAME = "Config/config.txt";
    
    /**
     * Defines the web site default language.
     */
    public $language = "en_EN";
    
    /**
     * Defines the session override for the language config.
     */
    private $session_language = "SESSION_LANG";
    
    /**
     * Path to the generated code folder. Contains all code generated by the system,
     * should not contain anything developed by the programmer.
     */
    public $generatedCodeFolder = "." . DIRECTORY_SEPARATOR . "Generated";
    
    /**
     * path to the data folder containing all data outside of the core structure,
     * generally contains data for the addons.
     */
    public $dataFolder = "." . DIRECTORY_SEPARATOR . "Data";
    
    /**
     * Class constructor, loads the configuration file and set all properties
     */
    public function __construct()
    {
        if (file_exists(self::CONFIG_FILENAME))
        {
            $this->loadConfig();
        }
        else
        {
            //Save default config if it does not exist, first launch
            $this->saveConfig();
        }
    }
    
    /**
     * Class destructor, called to save the dynamic configuration into the 
     * configuration file.
     */
    public function __destruct()
    {
        $this->saveConfig();
    }
    
    /**
     * Save the current configurations to the text file in the same folder.
     */
    private function saveConfig()
    {
        $text = "";
        $arrayvars = get_object_vars($this);
        foreach ($arrayvars as $key => $value)
        {
            $text .= "$key:$value" . PHP_EOL;
        }
        file_put_contents(self::CONFIG_FILENAME, $text);
    }
    
    /**
     * Load the text file and updates all configurations according to the file.
     */
    private function loadConfig()
    {
        //Check if this file is newer than the TXT file, if yes, don't load.
        if (filemtime(self::CONFIG_FILENAME) < filemtime(__FILE__))
        {
            return;
        }
        $text = file_get_contents(self::CONFIG_FILENAME);
        $arrayvars = explode(PHP_EOL, $text);
        foreach ($arrayvars as $value)
        {
            if (!empty($value))
            {
                $components = explode(":", $value);
                $this->{$components[0]} = $components[1];
            }
        }
        $this->overrideSession();
    }
    
    /**
     * Override current configurations with the one in the session.
     */
    private function overrideSession()
    {
        $reflect = new \ReflectionClass($this);
        $props = $reflect->getProperties(\ReflectionProperty::IS_PUBLIC);
        foreach ($props as $value)
        {
            $overrideName = "session_$value->name";
            if (property_exists($this, $overrideName) && isset($_SESSION[$this->$overrideName]))
            {
                $propName = $value->name;
                $this->$propName = $_SESSION[$this->$overrideName];
            }
        }
    }
}
